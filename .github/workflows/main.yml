name: Auto Merge Main to Test

on:
  push:
    branches:
      - main

jobs:
  merge-main-to-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure Git user (required for merge)
      - name: Configure Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      # Fetch all branches
      - name: Fetch all branches
        run: git fetch --all

      # Ensure test branch exists or create it
      - name: Ensure test branch exists
        run: |
          git branch -r | grep "origin/test" || git checkout -b test origin/main

      # Merge Main into Test (excluding conflicted files)
      - name: Merge Main into Test
        id: merge
        run: |
          git checkout test
          git fetch origin main
          # Checkout .github directory from 'test' to prevent overwriting
          git checkout test -- .github
          # Merge branch 'main' into 'test'
          git merge origin/main --no-commit --allow-unrelated-histories --no-ff || true
          # Detect and handle conflicts
          if git ls-files -u | grep -q ""; then
            echo "Conflicts detected!"
            CONFLICT_FILES=$(git diff --name-only --diff-filter=U)
            echo "conflict_files=$CONFLICT_FILES" >> $GITHUB_ENV
            CONFLICT_DETAILS=$(git diff --diff-filter=U)
            echo "conflict_details=$CONFLICT_DETAILS" >> $GITHUB_ENV
            for file in $CONFLICT_FILES; do
              git checkout --ours -- $file
              git add $file
            done
          fi
          # Commit merged files without conflicts
          git commit -m "Merge main into test (excluding conflicted files)" || true
          git push origin test || true

      # Notify conflict via Discord webhook
      - name: Notify Discord of Conflict
        if: ${{ env.conflict_files != '' }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          CONFLICT_FILES: ${{ env.conflict_files }}
          CONFLICT_DETAILS: ${{ env.conflict_details }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{
            \"content\": \"ðŸš¨ **Merge conflict detected!**\n- **Branch:** \`main\` â†’ \`test\`\n- **Time:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')\n- **Conflicted Files:** \`$CONFLICT_FILES\`\n\nDetails:\n\`\`\`$CONFLICT_DETAILS\`\`\`\nPlease review and resolve conflicts manually.\"
          }" \
          $DISCORD_WEBHOOK_URL
